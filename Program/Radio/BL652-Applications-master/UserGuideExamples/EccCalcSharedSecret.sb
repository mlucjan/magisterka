//Example :: EccCalcSharedSecret.sb

// Note: In read world scenarios, two devices generate their private/public
// key pair separately, then exchange the public key. Using the remote's 
// public key and the own private key, the shared secret is generated, therefore
// ending with the same shared key without exchanging the private key.
// For simplicity, this example shows this process performed on one device only

dim rc, EccType : EccType = 0x10000
dim prvKey_A$, pubKey_A$, SecretKey_A$
dim prvKey_B$, pubKey_B$, SecretKey_B$

// Generate first Public/Private keypair
rc = EccGeneratePubPrvKeys(EccType, prvKey_A$, pubKey_A$)
if rc == 0 then
	PRINT "\rPrv Key A: "; strhexize$(prvKey_A$)
	PRINT "\rPub Key A: "; strhexize$(pubKey_A$)
endif

// Generate second Public/Private keypair
rc = EccGeneratePubPrvKeys(EccType, prvKey_B$, pubKey_B$)
if rc == 0 then
	PRINT "\rPrv Key B: "; strhexize$(prvKey_B$)
	PRINT "\rPub Key B: "; strhexize$(pubKey_B$)
endif

// Compute first shared secret key
rc = EccCalcSharedSecret(EccType, prvKey_A$, pubKey_B$, SecretKey_A$)
if rc == 0 then
	PRINT "\rShared Secret 1: "; strhexize$(SecretKey_A$)
endif

// Compute second shared secret key
rc = EccCalcSharedSecret(EccType, prvKey_B$, pubKey_A$, SecretKey_B$)
if rc == 0 then
	PRINT "\rShared Secret 2: "; strhexize$(SecretKey_B$)
endif

// Compare keys to check if they are the same
If StrCmp(SecretKey_A$, SecretKey_B$)==0 then
	PRINT "\rThe generated shared secret keys are identical"
else
	PRINT "\rThe generated shared secret keys do not match"
endif
